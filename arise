local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local VirtualInputManager = game:GetService("VirtualInputManager")
local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()

-- Path to enemies folder
local ENEMIES_FOLDER = workspace.__Main.__Enemies.Client

-- Settings that can be changed from UI
local settings = {
    isRunning = false,
    teleportHeight = 3,
    attackDelay = 0.2,
    teleportMethod = "CFrame", -- "CFrame" or "Tween"
    targetSearchRadius = 100,
    useSmartTP = true,
    pressEAfterKill = true,
    currentTarget = nil,
    lastTargetHealth = 0
}

-- Create a simple UI
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "TPAttackGui"
ScreenGui.Parent = game:GetService("CoreGui")

local Frame = Instance.new("Frame")
Frame.Name = "MainFrame"
Frame.Size = UDim2.new(0, 200, 0, 240)
Frame.Position = UDim2.new(0.8, 0, 0.5, -120)
Frame.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
Frame.BorderSizePixel = 0
Frame.Active = true
Frame.Draggable = true
Frame.Parent = ScreenGui

local Title = Instance.new("TextLabel")
Title.Name = "Title"
Title.Size = UDim2.new(1, 0, 0, 30)
Title.Position = UDim2.new(0, 0, 0, 0)
Title.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.Text = "Mobile TP Attack"
Title.TextSize = 18
Title.Font = Enum.Font.SourceSansBold
Title.Parent = Frame

local ToggleButton = Instance.new("TextButton")
ToggleButton.Name = "ToggleButton"
ToggleButton.Size = UDim2.new(0.8, 0, 0, 25)
ToggleButton.Position = UDim2.new(0.1, 0, 0.2, 0)
ToggleButton.BackgroundColor3 = Color3.fromRGB(255, 50, 50)
ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ToggleButton.Text = "Start"
ToggleButton.TextSize = 14
ToggleButton.Font = Enum.Font.SourceSans
ToggleButton.Parent = Frame

local MethodToggle = Instance.new("TextButton")
MethodToggle.Name = "MethodToggle"
MethodToggle.Size = UDim2.new(0.8, 0, 0, 25)
MethodToggle.Position = UDim2.new(0.1, 0, 0.35, 0)
MethodToggle.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
MethodToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
MethodToggle.Text = "TP Method: CFrame"
MethodToggle.TextSize = 14
MethodToggle.Font = Enum.Font.SourceSans
MethodToggle.Parent = Frame

local SmartTPToggle = Instance.new("TextButton")
SmartTPToggle.Name = "SmartTPToggle"
SmartTPToggle.Size = UDim2.new(0.8, 0, 0, 25)
SmartTPToggle.Position = UDim2.new(0.1, 0, 0.5, 0)
SmartTPToggle.BackgroundColor3 = Color3.fromRGB(60, 120, 60)
SmartTPToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
SmartTPToggle.Text = "Smart TP: ON"
SmartTPToggle.TextSize = 14
SmartTPToggle.Font = Enum.Font.SourceSans
SmartTPToggle.Parent = Frame

local AutoEToggle = Instance.new("TextButton")
AutoEToggle.Name = "AutoEToggle"
AutoEToggle.Size = UDim2.new(0.8, 0, 0, 25)
AutoEToggle.Position = UDim2.new(0.1, 0, 0.65, 0)
AutoEToggle.BackgroundColor3 = Color3.fromRGB(60, 120, 60)
AutoEToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
AutoEToggle.Text = "Auto E: ON"
AutoEToggle.TextSize = 14
AutoEToggle.Font = Enum.Font.SourceSans
AutoEToggle.Parent = Frame

local StatusLabel = Instance.new("TextLabel")
StatusLabel.Name = "Status"
StatusLabel.Size = UDim2.new(0.8, 0, 0, 20)
StatusLabel.Position = UDim2.new(0.1, 0, 0.8, 0)
StatusLabel.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
StatusLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
StatusLabel.Text = "Ready"
StatusLabel.TextSize = 12
StatusLabel.Font = Enum.Font.SourceSans
StatusLabel.Parent = Frame

local TargetLabel = Instance.new("TextLabel")
TargetLabel.Name = "Target"
TargetLabel.Size = UDim2.new(0.8, 0, 0, 20)
TargetLabel.Position = UDim2.new(0.1, 0, 0.9, 0)
TargetLabel.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
TargetLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TargetLabel.Text = "No Target"
TargetLabel.TextSize = 12
TargetLabel.Font = Enum.Font.SourceSans
TargetLabel.Parent = Frame

-- Function to find enemies using the specific path
function findEnemies()
    local enemies = {}
    
    -- Check if the folder exists
    if ENEMIES_FOLDER then
        -- Get all children of the enemies folder
        for _, enemy in pairs(ENEMIES_FOLDER:GetChildren()) do
            -- Add the enemy to our list if it has the necessary parts
            if enemy:FindFirstChild("HumanoidRootPart") and enemy:FindFirstChild("Humanoid") and enemy.Humanoid.Health > 0 then
                table.insert(enemies, enemy)
            end
        end
    else
        warn("Enemy folder not found!")
    end
    
    return enemies
end

-- Function to find nearest enemy
function findNearestEnemy()
    local enemies = findEnemies()
    local nearestEnemy = nil
    local shortestDistance = settings.targetSearchRadius
    
    -- If we have a current target, check if it's still alive
    if settings.currentTarget and settings.currentTarget:FindFirstChild("Humanoid") and 
       settings.currentTarget.Humanoid.Health <= 0 then
        -- Target is dead, press E three times if enabled
        if settings.pressEAfterKill then
            pressEKey(3)
        end
        -- Clear current target
        settings.currentTarget = nil
    end
    
    -- If we don't have a target or it's dead, find a new one
    if not settings.currentTarget then
        for _, enemy in pairs(enemies) do
            if enemy:FindFirstChild("HumanoidRootPart") and enemy:FindFirstChild("Humanoid") and enemy.Humanoid.Health > 0 then
                local distance = (enemy.HumanoidRootPart.Position - LocalPlayer.Character.HumanoidRootPart.Position).magnitude
                if distance < shortestDistance then
                    shortestDistance = distance
                    nearestEnemy = enemy
                end
            end
        end
        
        if nearestEnemy then
            settings.currentTarget = nearestEnemy
            settings.lastTargetHealth = nearestEnemy.Humanoid.Health
            TargetLabel.Text = "Target: " .. nearestEnemy.Name
        end
    end
    
    return settings.currentTarget
end

-- Function to press E key multiple times
function pressEKey(times)
    for i = 1, times do
        -- For mobile, we can simulate key presses using VirtualInputManager
        VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.E, false, game)
        wait(0.1)
        VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.E, false, game)
        wait(0.1)
        StatusLabel.Text = "Pressed E (" .. i .. "/" .. times .. ")"
    end
end

-- Teleport bypass methods
function smartTeleport(targetCFrame)
    local character = LocalPlayer.Character
    if not character or not character:FindFirstChild("HumanoidRootPart") then return end
    
    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
    
    if settings.teleportMethod == "CFrame" then
        -- Method 1: Direct CFrame but with randomization to avoid detection
        if settings.useSmartTP then
            -- Add slight randomization to teleport position
            local randomOffset = Vector3.new(
                math.random(-10, 10) / 100,
                settings.teleportHeight + (math.random(-10, 10) / 100),
                math.random(-10, 10) / 100
            )
            humanoidRootPart.CFrame = targetCFrame * CFrame.new(randomOffset)
        else
            -- Standard teleport
            humanoidRootPart.CFrame = targetCFrame * CFrame.new(0, settings.teleportHeight, 0)
        end
    else
        -- Method 2: Tween Service (smoother motion, may bypass some anti-teleport systems)
        local tweenService = game:GetService("TweenService")
        local tweenInfo = TweenInfo.new(
            0.2, -- Time
            Enum.EasingStyle.Linear, -- Style
            Enum.EasingDirection.Out -- Direction
        )
        
        local targetPosition = targetCFrame * CFrame.new(0, settings.teleportHeight, 0)
        local tween = tweenService:Create(humanoidRootPart, tweenInfo, {CFrame = targetPosition})
        tween:Play()
        wait(0.2) -- Wait for tween to complete
    end
end

-- Function to simulate mobile attack (tap on screen)
function performMobileAttack()
    -- Get the center of the screen for tapping
    local screenSize = workspace.CurrentCamera.ViewportSize
    local centerX = screenSize.X / 2
    local centerY = screenSize.Y / 2
    
    -- Simulate a tap on the center of the screen
    VirtualInputManager:SendTouchEvent(1, true, centerX, centerY)
    wait(0.05)
    VirtualInputManager:SendTouchEvent(1, false, centerX, centerY)
    
    -- Status update
    StatusLabel.Text = "Attacked!"
    wait(0.2)
    if settings.isRunning then
        StatusLabel.Text = "Running..."
    else
        StatusLabel.Text = "Ready"
    end
end

-- Function to check if target is killed
function checkTargetKilled()
    if settings.currentTarget and settings.currentTarget:FindFirstChild("Humanoid") then
        local currentHealth = settings.currentTarget.Humanoid.Health
        
        -- Check if target health dropped to 0
        if settings.lastTargetHealth > 0 and currentHealth <= 0 then
            return true
        end
        
        -- Update last known health
        settings.lastTargetHealth = currentHealth
    end
    return false
end

-- Main attack loop
local attackConnection = nil

function startAttackLoop()
    if attackConnection then return end
    
    attackConnection = RunService.Heartbeat:Connect(function()
        if not settings.isRunning then return end
        
        local character = LocalPlayer.Character
        if not character or not character:FindFirstChild("HumanoidRootPart") then return end
        
        local enemy = findNearestEnemy()
        if enemy then
            smartTeleport(enemy.HumanoidRootPart.CFrame)
            wait(0.1) -- Small delay before attack
            performMobileAttack()
            wait(settings.attackDelay) -- Delay between attacks
            
            -- Check if target was killed
            if checkTargetKilled() then
                if settings.pressEAfterKill then
                    pressEKey(3)
                end
                -- Clear current target to find a new one
                settings.currentTarget = nil
            end
        else
            StatusLabel.Text = "No targets found"
            wait(0.5)
        end
    end)
end

function stopAttackLoop()
    if attackConnection then
        attackConnection:Disconnect()
        attackConnection = nil
    end
end

-- UI Button Handlers
ToggleButton.MouseButton1Click:Connect(function()
    settings.isRunning = not settings.isRunning
    
    if settings.isRunning then
        ToggleButton.Text = "Stop"
        ToggleButton.BackgroundColor3 = Color3.fromRGB(50, 255, 50)
        StatusLabel.Text = "Running..."
        startAttackLoop()
    else
        ToggleButton.Text = "Start"
        ToggleButton.BackgroundColor3 = Color3.fromRGB(255, 50, 50)
        StatusLabel.Text = "Ready"
        stopAttackLoop()
    end
end)

MethodToggle.MouseButton1Click:Connect(function()
    if settings.teleportMethod == "CFrame" then
        settings.teleportMethod = "Tween"
        MethodToggle.Text = "TP Method: Tween"
    else
        settings.teleportMethod = "CFrame"
        MethodToggle.Text = "TP Method: CFrame"
    end
end)

SmartTPToggle.MouseButton1Click:Connect(function()
    settings.useSmartTP = not settings.useSmartTP
    
    if settings.useSmartTP then
        SmartTPToggle.Text = "Smart TP: ON"
        SmartTPToggle.BackgroundColor3 = Color3.fromRGB(60, 120, 60)
    else
        SmartTPToggle.Text = "Smart TP: OFF"
        SmartTPToggle.BackgroundColor3 = Color3.fromRGB(120, 60, 60)
    end
end)

AutoEToggle.MouseButton1Click:Connect(function()
    settings.pressEAfterKill = not settings.pressEAfterKill
    
    if settings.pressEAfterKill then
        AutoEToggle.Text = "Auto E: ON"
        AutoEToggle.BackgroundColor3 = Color3.fromRGB(60, 120, 60)
    else
        AutoEToggle.Text = "Auto E: OFF"
        AutoEToggle.BackgroundColor3 = Color3.fromRGB(120, 60, 60)
    end
end)

-- Keybind for toggling on/off (works on mobile and PC)
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    
    if input.KeyCode == Enum.KeyCode.F then
        -- Toggle the script when F key is pressed
        settings.isRunning = not settings.isRunning
        
        if settings.isRunning then
            ToggleButton.Text = "Stop"
            ToggleButton.BackgroundColor3 = Color3.fromRGB(50, 255, 50)
            StatusLabel.Text = "Running..."
            startAttackLoop()
        else
            ToggleButton.Text = "Start"
            ToggleButton.BackgroundColor3 = Color3.fromRGB(255, 50, 50)
            StatusLabel.Text = "Ready"
            stopAttackLoop()
        end
    end
end)

-- Anti-AFK and cleanup
local VirtualUser = game:GetService("VirtualUser")
LocalPlayer.Idled:Connect(function()
    VirtualUser:CaptureController()
    VirtualUser:ClickButton2(Vector2.new())
end)

-- Initialize
if not game:IsLoaded() then
    game.Loaded:Wait()
end
LocalPlayer.CharacterAdded:Connect(function()
    if settings.isRunning then
        wait(1) -- Wait for character to fully load
        startAttackLoop()
    end
end)
